{"ast":null,"code":"var _jsxFileName = \"/home/f/FullStack/FullStack2020/Osa5/bloglist-frontend/src/components/BlogForm.js\";\nimport React, { useState } from 'react';\n\nconst BlogForm = ({\n  handleSubmit\n}) => {\n  const [newTitle, setNewTitle] = useState('');\n  const [newAuthor, setNewAuthor] = useState('');\n  const [newUrl, setNewUrl] = useState('');\n\n  const handleTitleChange = event => {\n    setNewTitle(event.target.value);\n  };\n\n  const handleAuthorChange = event => {\n    setNewAuthor(event.target.value);\n  };\n\n  const handleUrlChange = event => {\n    setNewUrl(event.target.value);\n  };\n\n  const addBlog = event => {\n    event.preventDefault();\n    const blogObject = {\n      title: newTitle,\n      author: newAuthor,\n      url: newUrl\n    };\n    blogService.create(blogObject).then(returnedBlog => {\n      setBlogs(blogs.concat(returnedBlog));\n      setNewTitle('');\n      setNewAuthor('');\n      setNewUrl('');\n      setAddVisible(false);\n      setMessage({\n        text: `A new blog ${blogObject.title} by ${blogObject.author} added`,\n        type: 'notify'\n      });\n      setTimeout(() => {\n        setMessage({\n          text: null,\n          type: 'notify'\n        });\n      }, 5000);\n    }).catch(error => {\n      setMessage({\n        text: `Error adding new blog. Blog must have title and url.`,\n        type: 'error'\n      });\n      setTimeout(() => {\n        setMessage({\n          text: null,\n          type: 'notify'\n        });\n      }, 5000);\n    });\n  };\n\n  return React.createElement(\"form\", {\n    onSubmit: addBlog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Title \", React.createElement(\"input\", {\n    value: newTitle,\n    onChange: handleTitleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Author \", React.createElement(\"input\", {\n    value: newAuthor,\n    onChange: handleAuthorChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Url \", React.createElement(\"input\", {\n    value: newUrl,\n    onChange: handleUrlChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Create\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }));\n};\n\nexport default BlogForm;","map":{"version":3,"sources":["/home/f/FullStack/FullStack2020/Osa5/bloglist-frontend/src/components/BlogForm.js"],"names":["React","useState","BlogForm","handleSubmit","newTitle","setNewTitle","newAuthor","setNewAuthor","newUrl","setNewUrl","handleTitleChange","event","target","value","handleAuthorChange","handleUrlChange","addBlog","preventDefault","blogObject","title","author","url","blogService","create","then","returnedBlog","setBlogs","blogs","concat","setAddVisible","setMessage","text","type","setTimeout","catch","error"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\n\nconst BlogForm = ({handleSubmit}) => { \n\n  const [newTitle, setNewTitle] = useState('')\n  const [newAuthor, setNewAuthor] = useState('')\n  const [newUrl, setNewUrl] = useState('')\n\n  const handleTitleChange = (event) => {\n    setNewTitle(event.target.value)\n  }\n\n  const handleAuthorChange = (event) => {\n    setNewAuthor(event.target.value)\n  }\n\n  const handleUrlChange = (event) => {\n    setNewUrl(event.target.value)\n  }\n\n  const addBlog = (event) => {\n    event.preventDefault()\n    const blogObject = {\n      title: newTitle,\n      author: newAuthor,\n      url: newUrl,\n    }\n  \n    blogService\n      .create(blogObject)\n      .then(returnedBlog => {\n        setBlogs(blogs.concat(returnedBlog))\n        setNewTitle('')\n        setNewAuthor('')\n        setNewUrl('')\n        setAddVisible(false)\n        setMessage({text:`A new blog ${blogObject.title} by ${blogObject.author} added`, type:'notify'})\n        setTimeout(() => {\n          setMessage({text:null, type:'notify'})\n        }, 5000) \n      }).catch(error => {\n        setMessage({text:`Error adding new blog. Blog must have title and url.`, type:'error'})\n          setTimeout(() => {\n          setMessage({text:null, type:'notify'})\n        }, 5000)\n      })\n  }\n\n  return (\n      <form onSubmit={addBlog}>\n        <div>\n          Title <input value={newTitle} onChange={handleTitleChange} />\n        </div>\n        <div>\n          Author <input value={newAuthor} onChange={handleAuthorChange} />\n        </div>\n        <div>\n          Url <input value={newUrl} onChange={handleUrlChange} />\n        </div>\n        <p></p>\n        <button type=\"submit\">Create</button>\n        <p></p>\n      </form> \n    )\n  }\n\nexport default BlogForm"]},"metadata":{},"sourceType":"module"}